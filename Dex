local a=Instance.new("Part")for b,c in pairs(getreg())do if type(c)=="table"and#c then if rawget(c,"__mode")=="kvs"then for d,e in pairs(c)do if e==a then getgenv().InstanceList=c;break end end end end end;local f={}function f.invalidate(g)if not InstanceList then return end;for b,c in pairs(InstanceList)do if c==g then InstanceList[b]=nil;return g end end end;if not cloneref then getgenv().cloneref=f.invalidate end;task.spawn(function()repeat task.wait()until game:IsLoaded()local h=200;local i={-200,200}local j={.1,1}local k=math.floor;local l=math.cos;local m=math.sin;local n=math.acos;local o=math.pi;local p=0;while task.wait()do if gcinfo()>=p then p=gcinfo()else break end end;task.wait(0.30)local q=gcinfo()+h;local r=0;local function s()local t=n(l(o*r))/o*h*2+-h;return k(q+t)end;local u;u=hookfunction(getrenv().gcinfo,function(...)return s()end)local v;v=hookfunction(getrenv().collectgarbage,function(w,...)local x,y=pcall(v,w,...)if x and w=="count"then return s()end;return v(w,...)end)game:GetService("RunService").Stepped:Connect(function()local t=n(l(o*r))/o*h*2+-h;if t>n(l(o*r+.01))/o*h*2+-h then r=r+.07 else r=r+0.01 end end)local z=h;for A,B in next,j do j[A]=B*10000 end;local C=math.random(j[1],j[2])/10000;while wait(j)do h=math.random(z+i[1],z+i[2])C=math.random(j[1],j[2])/10000 end end)task.spawn(function()repeat task.wait()until game:IsLoaded()local D=cloneref(game:GetService("RunService"))local E=cloneref(game:GetService("Stats"))local F=E:GetTotalMemoryUsageMb()local G=0;D.Stepped:Connect(function()local H=Random.new()G=H:NextNumber(-10,10)end)local function I()return F+G end;local J;J=hookmetamethod(game,"__namecall",function(self,...)local K=getnamecallmethod()if not checkcaller()then if typeof(self)=="Instance"and(K=="GetTotalMemoryUsageMb"or K=="getTotalMemoryUsageMb")and self.ClassName=="Stats"then return I()end end;return J(self,...)end)local L;L=hookfunction(E.GetTotalMemoryUsageMb,function(self,...)if not checkcaller()then if typeof(self)=="Instance"and self.ClassName=="Stats"then return I()end end end)end)task.spawn(function()repeat task.wait()until game:IsLoaded()local D=cloneref(game:GetService("RunService"))local E=cloneref(game:GetService("Stats"))local F=E:GetMemoryUsageMbForTag(Enum.DeveloperMemoryTag.Gui)local G=0;D.Stepped:Connect(function()local H=Random.new()G=H:NextNumber(-0.1,0.1)end)local function I()return F+G end;local J;J=hookmetamethod(game,"__namecall",function(self,...)local K=getnamecallmethod()if not checkcaller()then if typeof(self)=="Instance"and(K=="GetMemoryUsageMbForTag"or K=="getMemoryUsageMbForTag")and self.ClassName=="Stats"then return I()end end;return J(self,...)end)local L;L=hookfunction(E.GetMemoryUsageMbForTag,function(self,...)if not checkcaller()then if typeof(self)=="Instance"and self.ClassName=="Stats"then return I()end end end)end)local M=cloneref(game:GetService("ContentProvider"))local N=cloneref(game:GetService("CoreGui"))local O;local P;local Q={}game:GetService("ContentProvider"):PreloadAsync({N},function(R)if not R:find("rbxassetid://")then table.insert(Q,R)end end)local S={}for A,B in pairs(game:GetDescendants())do if B:IsA("ImageLabel")then if B.Image:find('rbxassetid://')and B:IsDescendantOf(N)then else table.insert(S,B.Image)end end end;function randomizeTable(T)local U=#T;while U>0 do local V=math.random(U)T[U],T[V]=T[V],T[U]U=U-1 end;return T end;local W;W=hookmetamethod(game,"__namecall",function(self,X,...)local K=getnamecallmethod()local Y=...if not checkcaller()and(K=="preloadAsync"or K=="PreloadAsync")then if X and X[1]and self.ClassName=="ContentProvider"then if X~=nil then if typeof(X[1])=="Instance"and(table.find(X,N)or table.find(X,game))then if X[1]==N then O=randomizeTable(Q)return W(self,O,...)end;if X[1]==game then P=randomizeTable(S)return W(self,P,...)end end end end end;return W(self,X,...)end)local Z;Z=hookfunction(M.PreloadAsync,function(a,b,c)if not checkcaller()then if typeof(a)=="Instance"and tostring(a)=="ContentProvider"and typeof(b)=="table"then if(table.find(b,N)or table.find(b,game))and not(table.find(b,true)or table.find(b,false))then if b[1]==N then O=randomizeTable(Q)return Z(a,O,c)end;if b[1]==game then P=randomizeTable(S)return Z(a,P,c)end end end end;return Z(a,b,c)end)local _=game.IsDescendantOf;local a0;a0=hookmetamethod(game,"__namecall",function(self,...)local K=getnamecallmethod()local Y=...if not checkcaller()then if typeof(self)=="Instance"and K=="GetFocusedTextBox"and self.ClassName=="UserInputService"then local a1=a0(self,...)if a1 and typeof(a1)=="Instance"then local a2,y=pcall(function()_(a1,Bypassed_Dex)end)if y and y:match("The current identity")then return nil end end end end;return a0(self,...)end)local a3={}local a4;a4=hookfunction(getrenv().newproxy,function(...)local a5=a4(...)table.insert(a3,a5)return a5 end)local D=cloneref(game:GetService("RunService"))D.Stepped:Connect(function()for A,B in pairs(a3)do if B==nil then end end end)getgenv().Bypassed_Dex=game:GetObjects("rbxassetid://9352453730")[1]local a6={}for A=48,57 do table.insert(a6,string.char(A))end;for A=65,90 do table.insert(a6,string.char(A))end;for A=97,122 do table.insert(a6,string.char(A))end;function RandomCharacters(a7)if a7>0 then return RandomCharacters(a7-1)..a6[math.random(1,#a6)]else return""end end;Bypassed_Dex.Name=RandomCharacters(math.random(5,20))if gethui then Bypassed_Dex.Parent=gethui()elseif syn and syn.protect_gui then syn.protect_gui(Bypassed_Dex)Bypassed_Dex.Parent=cloneref(game:GetService("CoreGui"))else Bypassed_Dex.Parent=cloneref(game:GetService("CoreGui"))end;local function a8(a9,aa)local function ab(ac,ad)local ae={}local af={script=ad}local ag={}function ag:__index(b)if af[b]==nil then return getfenv()[b]else return af[b]end end;function ag:__newindex(b,c)if af[b]==nil then getfenv()[b]=c else af[b]=c end end;setmetatable(ae,ag)setfenv(ac,ae)return ac end;local function ah(ad)if ad.ClassName=="Script"or ad.ClassName=="LocalScript"then task.spawn(ab(loadstring(ad.Source,"="..ad:GetFullName()),ad))end;for ai,B in ipairs(ad:GetChildren())do ah(B)end end;ah(a9)end;a8(Bypassed_Dex)
